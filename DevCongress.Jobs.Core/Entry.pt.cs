using Autofac;
using Enexure.MicroBus;
using Microsoft.AspNetCore.Mvc.Razor;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.FileProviders;
using DevCongress.Jobs.Core.Filters;

// !! Do not edit this file directly
// !! Create another part instead

namespace DevCongress.Jobs.Core
{
  public static partial class Entry
  {
    #region extension points

    static partial void RegisterHandlers(BusBuilder builder);

    static partial void RegisterServices(IServiceCollection services);

    #endregion extension points

    public static BusBuilder RegisterCore(this BusBuilder builder)
    {
      builder.RegisterHandlers(typeof(Entry).Assembly);

      RegisterHandlers(builder);

      return builder;
    }

    public static IServiceCollection AddCore(this IServiceCollection services)
    {
      services.Configure<RazorViewEngineOptions>(options =>
      {
        options.FileProviders.Add(
            new EmbeddedFileProvider(
                typeof(CoreModule).Assembly,
                "DevCongress.Jobs.Core" // your external assembly's base namespace
            )
        );
      });

      RegisterServices(services);

      return services;
    }

    public partial class CoreModule : Autofac.Module
    {
      #region extension points

      static partial void BuildContainer(ContainerBuilder builder);

      #endregion extension points

      protected override void Load(ContainerBuilder builder)
      {
        builder
            .RegisterAssemblyTypes(typeof(Entry).Assembly)
            .AsImplementedInterfaces();

        builder
            .RegisterType<AuthenticateActionFilter>()
            .AsSelf()
            .InstancePerLifetimeScope();

        BuildContainer(builder);
      }
    }
  }
}
